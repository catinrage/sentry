"a interruption in the schedule of a stage"
type ProjectStageScheduleInterruption {
  "the unique identifier"
  id: ID!
  "date when the schedule starts"
  dateStart: DateTime!
  "date when the schedule ends"
  dateEnd: DateTime!
  "reason for the interruption"
  reason: String!
}

extend type ProjectStageSchedule {
  "list of interruptions in the schedule"
  interruptions: [ProjectStageScheduleInterruption!]!
}

input ProjectStageScheduleInterruptionInputCreate {
  "schedule that this interruption belongs to"
  projectStageScheduleId: ID!
  "date when the schedule starts"
  dateStart: DateTime!
  "date when the schedule ends"
  dateEnd: DateTime!
  "reason for the interruption"
  reason: String!
}

input ProjectStageScheduleInterruptionInputUpdate {
  "date when the schedule starts"
  dateStart: DateTime
  "date when the schedule ends"
  dateEnd: DateTime
  "reason for the interruption"
  reason: String
}

extend type Mutation {
  "create a project stage schedule interruption"
  projectStageScheduleInterruptionCreate(
    input: ProjectStageScheduleInterruptionInputCreate!
  ): MutationResponse!
  "update a project stage schedule interruption"
  projectStageScheduleInterruptionUpdate(
    id: ID!
    input: ProjectStageScheduleInterruptionInputUpdate!
  ): MutationResponse!
  "delete a project stage schedule interruption"
  projectStageScheduleInterruptionDelete(id: ID!): MutationResponse!
}
