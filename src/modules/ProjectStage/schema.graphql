"a stage for project"
type ProjectStage {
  "the unique identifier"
  id: ID!
  "determines the number of the stage"
  number: Int!
  "title for this stage"
  title: String

  "project that this stage belongs to"
  project: Project!

  createdAt: DateTime!
  updatedAt: DateTime!
}

extend type Project {
  "stages for this project"
  stages: [ProjectStage!]
}

" input fields to create a new project stage "
input ProjectStageInputCreate {
  "title for this stage"
  title: String

  "project's id that this stage belongs to"
  projectId: String!
}

" input fields to update an existing project stage "
input ProjectStageInputUpdate {
  "title for this stage"
  title: String
}

extend type Mutation {
  "create a project stage"
  projectStageCreate(input: ProjectStageInputCreate!): MutationResponse!
  "update a project stage"
  projectStageUpdate(id: ID!, input: ProjectStageInputUpdate!): MutationResponse!
  "delete a project stage"
  projectStageDelete(id: ID!): MutationResponse!
  "reorder stages in a project"
  projectReorderStages(projectId: ID!): MutationResponse!
}
